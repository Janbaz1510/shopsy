// Mocks generated by Mockito 5.4.6 from annotations
// in shopsy/test/unit/data/datasources/product_local_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i13;
import 'dart:developer' as _i18;
import 'dart:ui' as _i9;

import 'package:clock/clock.dart' as _i4;
import 'package:flutter/foundation.dart' as _i6;
import 'package:flutter/gestures.dart' as _i10;
import 'package:flutter/rendering.dart' as _i11;
import 'package:flutter/scheduler.dart' as _i17;
import 'package:flutter/services.dart' as _i7;
import 'package:flutter/widgets.dart' as _i12;
import 'package:flutter_test/src/binding.dart' as _i14;
import 'package:flutter_test/src/restoration.dart' as _i3;
import 'package:flutter_test/src/test_default_binary_messenger.dart' as _i8;
import 'package:flutter_test/src/test_text_input.dart' as _i5;
import 'package:flutter_test/src/window.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i16;
import 'package:test_api/scaffolding.dart' as _i15;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTestWindow_0 extends _i1.SmartFake implements _i2.TestWindow {
  _FakeTestWindow_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTestPlatformDispatcher_1 extends _i1.SmartFake
    implements _i2.TestPlatformDispatcher {
  _FakeTestPlatformDispatcher_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTestRestorationManager_2 extends _i1.SmartFake
    implements _i3.TestRestorationManager {
  _FakeTestRestorationManager_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeClock_3 extends _i1.SmartFake implements _i4.Clock {
  _FakeClock_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTestTextInput_4 extends _i1.SmartFake implements _i5.TestTextInput {
  _FakeTestTextInput_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDuration_5 extends _i1.SmartFake implements Duration {
  _FakeDuration_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeValueNotifier_6<T> extends _i1.SmartFake
    implements _i6.ValueNotifier<T> {
  _FakeValueNotifier_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeHardwareKeyboard_7 extends _i1.SmartFake
    implements _i7.HardwareKeyboard {
  _FakeHardwareKeyboard_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeKeyEventManager_8 extends _i1.SmartFake
    implements _i7.KeyEventManager {
  _FakeKeyEventManager_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTestDefaultBinaryMessenger_9 extends _i1.SmartFake
    implements _i8.TestDefaultBinaryMessenger {
  _FakeTestDefaultBinaryMessenger_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeChannelBuffers_10 extends _i1.SmartFake
    implements _i9.ChannelBuffers {
  _FakeChannelBuffers_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePointerRouter_11 extends _i1.SmartFake
    implements _i10.PointerRouter {
  _FakePointerRouter_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGestureArenaManager_12 extends _i1.SmartFake
    implements _i10.GestureArenaManager {
  _FakeGestureArenaManager_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePointerSignalResolver_13 extends _i1.SmartFake
    implements _i10.PointerSignalResolver {
  _FakePointerSignalResolver_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSamplingClock_14 extends _i1.SmartFake
    implements _i10.SamplingClock {
  _FakeSamplingClock_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAccessibilityFeatures_15 extends _i1.SmartFake
    implements _i9.AccessibilityFeatures {
  _FakeAccessibilityFeatures_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRenderView_16 extends _i1.SmartFake implements _i11.RenderView {
  _FakeRenderView_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);

  @override
  String toString({_i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeMouseTracker_17 extends _i1.SmartFake implements _i11.MouseTracker {
  _FakeMouseTracker_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeImageCache_18 extends _i1.SmartFake implements _i11.ImageCache {
  _FakeImageCache_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeListenable_19 extends _i1.SmartFake implements _i6.Listenable {
  _FakeListenable_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePlatformMenuDelegate_20 extends _i1.SmartFake
    implements _i12.PlatformMenuDelegate {
  _FakePlatformMenuDelegate_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFocusManager_21 extends _i1.SmartFake implements _i12.FocusManager {
  _FakeFocusManager_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);

  @override
  String toString({_i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeViewConfiguration_22 extends _i1.SmartFake
    implements _i11.ViewConfiguration {
  _FakeViewConfiguration_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOffset_23 extends _i1.SmartFake implements _i9.Offset {
  _FakeOffset_23(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_24<T1> extends _i1.SmartFake implements _i13.Future<T1> {
  _FakeFuture_24(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSemanticsHandle_25 extends _i1.SmartFake
    implements _i11.SemanticsHandle {
  _FakeSemanticsHandle_25(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSemanticsUpdateBuilder_26 extends _i1.SmartFake
    implements _i9.SemanticsUpdateBuilder {
  _FakeSemanticsUpdateBuilder_26(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSceneBuilder_27 extends _i1.SmartFake implements _i9.SceneBuilder {
  _FakeSceneBuilder_27(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePictureRecorder_28 extends _i1.SmartFake
    implements _i9.PictureRecorder {
  _FakePictureRecorder_28(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCanvas_29 extends _i1.SmartFake implements _i9.Canvas {
  _FakeCanvas_29(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCodec_30 extends _i1.SmartFake implements _i9.Codec {
  _FakeCodec_30(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWidget_31 extends _i1.SmartFake implements _i12.Widget {
  _FakeWidget_31(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);

  @override
  String toString({_i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [TestWidgetsFlutterBinding].
///
/// See the documentation for Mockito's code generation for more information.
class MockTestWidgetsFlutterBinding extends _i1.Mock
    implements _i14.TestWidgetsFlutterBinding {
  MockTestWidgetsFlutterBinding() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TestWindow get window =>
      (super.noSuchMethod(
            Invocation.getter(#window),
            returnValue: _FakeTestWindow_0(this, Invocation.getter(#window)),
          )
          as _i2.TestWindow);

  @override
  _i2.TestPlatformDispatcher get platformDispatcher =>
      (super.noSuchMethod(
            Invocation.getter(#platformDispatcher),
            returnValue: _FakeTestPlatformDispatcher_1(
              this,
              Invocation.getter(#platformDispatcher),
            ),
          )
          as _i2.TestPlatformDispatcher);

  @override
  bool get shouldPropagateDevicePointerEvents =>
      (super.noSuchMethod(
            Invocation.getter(#shouldPropagateDevicePointerEvents),
            returnValue: false,
          )
          as bool);

  @override
  bool get showAppDumpInErrors =>
      (super.noSuchMethod(
            Invocation.getter(#showAppDumpInErrors),
            returnValue: false,
          )
          as bool);

  @override
  _i3.TestRestorationManager get restorationManager =>
      (super.noSuchMethod(
            Invocation.getter(#restorationManager),
            returnValue: _FakeTestRestorationManager_2(
              this,
              Invocation.getter(#restorationManager),
            ),
          )
          as _i3.TestRestorationManager);

  @override
  _i6.DebugPrintCallback get debugPrintOverride =>
      (super.noSuchMethod(
            Invocation.getter(#debugPrintOverride),
            returnValue: (String? message, {int? wrapWidth}) {},
          )
          as _i6.DebugPrintCallback);

  @override
  bool get disableShadows =>
      (super.noSuchMethod(
            Invocation.getter(#disableShadows),
            returnValue: false,
          )
          as bool);

  @override
  bool get overrideHttpClient =>
      (super.noSuchMethod(
            Invocation.getter(#overrideHttpClient),
            returnValue: false,
          )
          as bool);

  @override
  bool get registerTestTextInput =>
      (super.noSuchMethod(
            Invocation.getter(#registerTestTextInput),
            returnValue: false,
          )
          as bool);

  @override
  bool get inTest =>
      (super.noSuchMethod(Invocation.getter(#inTest), returnValue: false)
          as bool);

  @override
  int get microtaskCount =>
      (super.noSuchMethod(Invocation.getter(#microtaskCount), returnValue: 0)
          as int);

  @override
  _i15.Timeout get defaultTestTimeout =>
      (super.noSuchMethod(
            Invocation.getter(#defaultTestTimeout),
            returnValue: _i16.dummyValue<_i15.Timeout>(
              this,
              Invocation.getter(#defaultTestTimeout),
            ),
          )
          as _i15.Timeout);

  @override
  _i4.Clock get clock =>
      (super.noSuchMethod(
            Invocation.getter(#clock),
            returnValue: _FakeClock_3(this, Invocation.getter(#clock)),
          )
          as _i4.Clock);

  @override
  _i14.TestBindingEventSource get pointerEventSource =>
      (super.noSuchMethod(
            Invocation.getter(#pointerEventSource),
            returnValue: _i14.TestBindingEventSource.test,
          )
          as _i14.TestBindingEventSource);

  @override
  _i5.TestTextInput get testTextInput =>
      (super.noSuchMethod(
            Invocation.getter(#testTextInput),
            returnValue: _FakeTestTextInput_4(
              this,
              Invocation.getter(#testTextInput),
            ),
          )
          as _i5.TestTextInput);

  @override
  set window(_i2.TestWindow? _window) => super.noSuchMethod(
    Invocation.setter(#window, _window),
    returnValueForMissingStub: null,
  );

  @override
  set shouldPropagateDevicePointerEvents(
    bool? _shouldPropagateDevicePointerEvents,
  ) => super.noSuchMethod(
    Invocation.setter(
      #shouldPropagateDevicePointerEvents,
      _shouldPropagateDevicePointerEvents,
    ),
    returnValueForMissingStub: null,
  );

  @override
  set showAppDumpInErrors(bool? _showAppDumpInErrors) => super.noSuchMethod(
    Invocation.setter(#showAppDumpInErrors, _showAppDumpInErrors),
    returnValueForMissingStub: null,
  );

  @override
  set focusedEditable(_i12.EditableTextState? value) => super.noSuchMethod(
    Invocation.setter(#focusedEditable, value),
    returnValueForMissingStub: null,
  );

  @override
  bool get locked =>
      (super.noSuchMethod(Invocation.getter(#locked), returnValue: false)
          as bool);

  @override
  _i17.SchedulingStrategy get schedulingStrategy =>
      (super.noSuchMethod(
            Invocation.getter(#schedulingStrategy),
            returnValue:
                ({
                  required int priority,
                  required _i17.SchedulerBinding scheduler,
                }) => false,
          )
          as _i17.SchedulingStrategy);

  @override
  int get transientCallbackCount =>
      (super.noSuchMethod(
            Invocation.getter(#transientCallbackCount),
            returnValue: 0,
          )
          as int);

  @override
  _i13.Future<void> get endOfFrame =>
      (super.noSuchMethod(
            Invocation.getter(#endOfFrame),
            returnValue: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  bool get hasScheduledFrame =>
      (super.noSuchMethod(
            Invocation.getter(#hasScheduledFrame),
            returnValue: false,
          )
          as bool);

  @override
  _i17.SchedulerPhase get schedulerPhase =>
      (super.noSuchMethod(
            Invocation.getter(#schedulerPhase),
            returnValue: _i17.SchedulerPhase.idle,
          )
          as _i17.SchedulerPhase);

  @override
  bool get framesEnabled =>
      (super.noSuchMethod(Invocation.getter(#framesEnabled), returnValue: false)
          as bool);

  @override
  Duration get currentFrameTimeStamp =>
      (super.noSuchMethod(
            Invocation.getter(#currentFrameTimeStamp),
            returnValue: _FakeDuration_5(
              this,
              Invocation.getter(#currentFrameTimeStamp),
            ),
          )
          as Duration);

  @override
  Duration get currentSystemFrameTimeStamp =>
      (super.noSuchMethod(
            Invocation.getter(#currentSystemFrameTimeStamp),
            returnValue: _FakeDuration_5(
              this,
              Invocation.getter(#currentSystemFrameTimeStamp),
            ),
          )
          as Duration);

  @override
  set schedulingStrategy(_i17.SchedulingStrategy? _schedulingStrategy) =>
      super.noSuchMethod(
        Invocation.setter(#schedulingStrategy, _schedulingStrategy),
        returnValueForMissingStub: null,
      );

  @override
  _i6.ValueNotifier<int?> get accessibilityFocus =>
      (super.noSuchMethod(
            Invocation.getter(#accessibilityFocus),
            returnValue: _FakeValueNotifier_6<int?>(
              this,
              Invocation.getter(#accessibilityFocus),
            ),
          )
          as _i6.ValueNotifier<int?>);

  @override
  _i7.HardwareKeyboard get keyboard =>
      (super.noSuchMethod(
            Invocation.getter(#keyboard),
            returnValue: _FakeHardwareKeyboard_7(
              this,
              Invocation.getter(#keyboard),
            ),
          )
          as _i7.HardwareKeyboard);

  @override
  _i7.KeyEventManager get keyEventManager =>
      (super.noSuchMethod(
            Invocation.getter(#keyEventManager),
            returnValue: _FakeKeyEventManager_8(
              this,
              Invocation.getter(#keyEventManager),
            ),
          )
          as _i7.KeyEventManager);

  @override
  _i8.TestDefaultBinaryMessenger get defaultBinaryMessenger =>
      (super.noSuchMethod(
            Invocation.getter(#defaultBinaryMessenger),
            returnValue: _FakeTestDefaultBinaryMessenger_9(
              this,
              Invocation.getter(#defaultBinaryMessenger),
            ),
          )
          as _i8.TestDefaultBinaryMessenger);

  @override
  _i9.ChannelBuffers get channelBuffers =>
      (super.noSuchMethod(
            Invocation.getter(#channelBuffers),
            returnValue: _FakeChannelBuffers_10(
              this,
              Invocation.getter(#channelBuffers),
            ),
          )
          as _i9.ChannelBuffers);

  @override
  _i10.PointerRouter get pointerRouter =>
      (super.noSuchMethod(
            Invocation.getter(#pointerRouter),
            returnValue: _FakePointerRouter_11(
              this,
              Invocation.getter(#pointerRouter),
            ),
          )
          as _i10.PointerRouter);

  @override
  _i10.GestureArenaManager get gestureArena =>
      (super.noSuchMethod(
            Invocation.getter(#gestureArena),
            returnValue: _FakeGestureArenaManager_12(
              this,
              Invocation.getter(#gestureArena),
            ),
          )
          as _i10.GestureArenaManager);

  @override
  _i10.PointerSignalResolver get pointerSignalResolver =>
      (super.noSuchMethod(
            Invocation.getter(#pointerSignalResolver),
            returnValue: _FakePointerSignalResolver_13(
              this,
              Invocation.getter(#pointerSignalResolver),
            ),
          )
          as _i10.PointerSignalResolver);

  @override
  bool get resamplingEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#resamplingEnabled),
            returnValue: false,
          )
          as bool);

  @override
  Duration get samplingOffset =>
      (super.noSuchMethod(
            Invocation.getter(#samplingOffset),
            returnValue: _FakeDuration_5(
              this,
              Invocation.getter(#samplingOffset),
            ),
          )
          as Duration);

  @override
  _i10.SamplingClock get samplingClock =>
      (super.noSuchMethod(
            Invocation.getter(#samplingClock),
            returnValue: _FakeSamplingClock_14(
              this,
              Invocation.getter(#samplingClock),
            ),
          )
          as _i10.SamplingClock);

  @override
  set resamplingEnabled(bool? _resamplingEnabled) => super.noSuchMethod(
    Invocation.setter(#resamplingEnabled, _resamplingEnabled),
    returnValueForMissingStub: null,
  );

  @override
  set samplingOffset(Duration? _samplingOffset) => super.noSuchMethod(
    Invocation.setter(#samplingOffset, _samplingOffset),
    returnValueForMissingStub: null,
  );

  @override
  bool get semanticsEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#semanticsEnabled),
            returnValue: false,
          )
          as bool);

  @override
  int get debugOutstandingSemanticsHandles =>
      (super.noSuchMethod(
            Invocation.getter(#debugOutstandingSemanticsHandles),
            returnValue: 0,
          )
          as int);

  @override
  _i9.AccessibilityFeatures get accessibilityFeatures =>
      (super.noSuchMethod(
            Invocation.getter(#accessibilityFeatures),
            returnValue: _FakeAccessibilityFeatures_15(
              this,
              Invocation.getter(#accessibilityFeatures),
            ),
          )
          as _i9.AccessibilityFeatures);

  @override
  bool get disableAnimations =>
      (super.noSuchMethod(
            Invocation.getter(#disableAnimations),
            returnValue: false,
          )
          as bool);

  @override
  _i11.PipelineOwner get pipelineOwner =>
      (super.noSuchMethod(
            Invocation.getter(#pipelineOwner),
            returnValue: _i16.dummyValue<_i11.PipelineOwner>(
              this,
              Invocation.getter(#pipelineOwner),
            ),
          )
          as _i11.PipelineOwner);

  @override
  _i11.RenderView get renderView =>
      (super.noSuchMethod(
            Invocation.getter(#renderView),
            returnValue: _FakeRenderView_16(
              this,
              Invocation.getter(#renderView),
            ),
          )
          as _i11.RenderView);

  @override
  _i11.MouseTracker get mouseTracker =>
      (super.noSuchMethod(
            Invocation.getter(#mouseTracker),
            returnValue: _FakeMouseTracker_17(
              this,
              Invocation.getter(#mouseTracker),
            ),
          )
          as _i11.MouseTracker);

  @override
  _i11.PipelineOwner get rootPipelineOwner =>
      (super.noSuchMethod(
            Invocation.getter(#rootPipelineOwner),
            returnValue: _i16.dummyValue<_i11.PipelineOwner>(
              this,
              Invocation.getter(#rootPipelineOwner),
            ),
          )
          as _i11.PipelineOwner);

  @override
  Iterable<_i11.RenderView> get renderViews =>
      (super.noSuchMethod(
            Invocation.getter(#renderViews),
            returnValue: <_i11.RenderView>[],
          )
          as Iterable<_i11.RenderView>);

  @override
  bool get sendFramesToEngine =>
      (super.noSuchMethod(
            Invocation.getter(#sendFramesToEngine),
            returnValue: false,
          )
          as bool);

  @override
  _i11.ImageCache get imageCache =>
      (super.noSuchMethod(
            Invocation.getter(#imageCache),
            returnValue: _FakeImageCache_18(
              this,
              Invocation.getter(#imageCache),
            ),
          )
          as _i11.ImageCache);

  @override
  _i6.Listenable get systemFonts =>
      (super.noSuchMethod(
            Invocation.getter(#systemFonts),
            returnValue: _FakeListenable_19(
              this,
              Invocation.getter(#systemFonts),
            ),
          )
          as _i6.Listenable);

  @override
  _i12.PlatformMenuDelegate get platformMenuDelegate =>
      (super.noSuchMethod(
            Invocation.getter(#platformMenuDelegate),
            returnValue: _FakePlatformMenuDelegate_20(
              this,
              Invocation.getter(#platformMenuDelegate),
            ),
          )
          as _i12.PlatformMenuDelegate);

  @override
  bool get debugBuildingDirtyElements =>
      (super.noSuchMethod(
            Invocation.getter(#debugBuildingDirtyElements),
            returnValue: false,
          )
          as bool);

  @override
  bool get debugShowWidgetInspectorOverride =>
      (super.noSuchMethod(
            Invocation.getter(#debugShowWidgetInspectorOverride),
            returnValue: false,
          )
          as bool);

  @override
  _i6.ValueNotifier<bool> get debugShowWidgetInspectorOverrideNotifier =>
      (super.noSuchMethod(
            Invocation.getter(#debugShowWidgetInspectorOverrideNotifier),
            returnValue: _FakeValueNotifier_6<bool>(
              this,
              Invocation.getter(#debugShowWidgetInspectorOverrideNotifier),
            ),
          )
          as _i6.ValueNotifier<bool>);

  @override
  _i6.ValueNotifier<bool> get debugWidgetInspectorSelectionOnTapEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#debugWidgetInspectorSelectionOnTapEnabled),
            returnValue: _FakeValueNotifier_6<bool>(
              this,
              Invocation.getter(#debugWidgetInspectorSelectionOnTapEnabled),
            ),
          )
          as _i6.ValueNotifier<bool>);

  @override
  _i12.FocusManager get focusManager =>
      (super.noSuchMethod(
            Invocation.getter(#focusManager),
            returnValue: _FakeFocusManager_21(
              this,
              Invocation.getter(#focusManager),
            ),
          )
          as _i12.FocusManager);

  @override
  bool get firstFrameRasterized =>
      (super.noSuchMethod(
            Invocation.getter(#firstFrameRasterized),
            returnValue: false,
          )
          as bool);

  @override
  _i13.Future<void> get waitUntilFirstFrameRasterized =>
      (super.noSuchMethod(
            Invocation.getter(#waitUntilFirstFrameRasterized),
            returnValue: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  bool get debugDidSendFirstFrameEvent =>
      (super.noSuchMethod(
            Invocation.getter(#debugDidSendFirstFrameEvent),
            returnValue: false,
          )
          as bool);

  @override
  bool get isRootWidgetAttached =>
      (super.noSuchMethod(
            Invocation.getter(#isRootWidgetAttached),
            returnValue: false,
          )
          as bool);

  @override
  set platformMenuDelegate(_i12.PlatformMenuDelegate? _platformMenuDelegate) =>
      super.noSuchMethod(
        Invocation.setter(#platformMenuDelegate, _platformMenuDelegate),
        returnValueForMissingStub: null,
      );

  @override
  set debugBuildingDirtyElements(bool? _debugBuildingDirtyElements) =>
      super.noSuchMethod(
        Invocation.setter(
          #debugBuildingDirtyElements,
          _debugBuildingDirtyElements,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set debugShowWidgetInspectorOverride(bool? value) => super.noSuchMethod(
    Invocation.setter(#debugShowWidgetInspectorOverride, value),
    returnValueForMissingStub: null,
  );

  @override
  void reset() => super.noSuchMethod(
    Invocation.method(#reset, []),
    returnValueForMissingStub: null,
  );

  @override
  _i3.TestRestorationManager createRestorationManager() =>
      (super.noSuchMethod(
            Invocation.method(#createRestorationManager, []),
            returnValue: _FakeTestRestorationManager_2(
              this,
              Invocation.method(#createRestorationManager, []),
            ),
          )
          as _i3.TestRestorationManager);

  @override
  _i13.Future<void> delayed(Duration? duration) =>
      (super.noSuchMethod(
            Invocation.method(#delayed, [duration]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  void initInstances() => super.noSuchMethod(
    Invocation.method(#initInstances, []),
    returnValueForMissingStub: null,
  );

  @override
  void initLicenses() => super.noSuchMethod(
    Invocation.method(#initLicenses, []),
    returnValueForMissingStub: null,
  );

  @override
  bool debugCheckZone(String? entryPoint) =>
      (super.noSuchMethod(
            Invocation.method(#debugCheckZone, [entryPoint]),
            returnValue: false,
          )
          as bool);

  @override
  _i13.Future<void> pump([
    Duration? duration,
    _i14.EnginePhase? newPhase = _i14.EnginePhase.sendSemanticsUpdate,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#pump, [duration, newPhase]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<T?> runAsync<T>(_i13.Future<T> Function()? callback) =>
      (super.noSuchMethod(
            Invocation.method(#runAsync, [callback]),
            returnValue: _i13.Future<T?>.value(),
          )
          as _i13.Future<T?>);

  @override
  _i13.Future<void> setLocale(String? languageCode, String? countryCode) =>
      (super.noSuchMethod(
            Invocation.method(#setLocale, [languageCode, countryCode]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> setLocales(List<_i9.Locale>? locales) =>
      (super.noSuchMethod(
            Invocation.method(#setLocales, [locales]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<_i9.AppExitResponse> exitApplication(
    _i9.AppExitType? exitType, [
    int? exitCode = 0,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#exitApplication, [exitType, exitCode]),
            returnValue: _i13.Future<_i9.AppExitResponse>.value(
              _i9.AppExitResponse.exit,
            ),
          )
          as _i13.Future<_i9.AppExitResponse>);

  @override
  void readTestInitialLifecycleStateFromNativeWindow() => super.noSuchMethod(
    Invocation.method(#readTestInitialLifecycleStateFromNativeWindow, []),
    returnValueForMissingStub: null,
  );

  @override
  _i13.Future<void> setSurfaceSize(_i9.Size? size) =>
      (super.noSuchMethod(
            Invocation.method(#setSurfaceSize, [size]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  void addRenderView(_i11.RenderView? view) => super.noSuchMethod(
    Invocation.method(#addRenderView, [view]),
    returnValueForMissingStub: null,
  );

  @override
  _i11.ViewConfiguration createViewConfigurationFor(
    _i11.RenderView? renderView,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createViewConfigurationFor, [renderView]),
            returnValue: _FakeViewConfiguration_22(
              this,
              Invocation.method(#createViewConfigurationFor, [renderView]),
            ),
          )
          as _i11.ViewConfiguration);

  @override
  _i13.Future<void> idle() =>
      (super.noSuchMethod(
            Invocation.method(#idle, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i9.Offset globalToLocal(_i9.Offset? point, _i11.RenderView? view) =>
      (super.noSuchMethod(
            Invocation.method(#globalToLocal, [point, view]),
            returnValue: _FakeOffset_23(
              this,
              Invocation.method(#globalToLocal, [point, view]),
            ),
          )
          as _i9.Offset);

  @override
  _i9.Offset localToGlobal(_i9.Offset? point, _i11.RenderView? view) =>
      (super.noSuchMethod(
            Invocation.method(#localToGlobal, [point, view]),
            returnValue: _FakeOffset_23(
              this,
              Invocation.method(#localToGlobal, [point, view]),
            ),
          )
          as _i9.Offset);

  @override
  void handlePointerEventForSource(
    _i10.PointerEvent? event, {
    _i14.TestBindingEventSource? source = _i14.TestBindingEventSource.device,
  }) => super.noSuchMethod(
    Invocation.method(#handlePointerEventForSource, [event], {#source: source}),
    returnValueForMissingStub: null,
  );

  @override
  void withPointerEventSource(
    _i14.TestBindingEventSource? source,
    _i9.VoidCallback? task,
  ) => super.noSuchMethod(
    Invocation.method(#withPointerEventSource, [source, task]),
    returnValueForMissingStub: null,
  );

  @override
  List<_i14.CapturedAccessibilityAnnouncement> takeAnnouncements() =>
      (super.noSuchMethod(
            Invocation.method(#takeAnnouncements, []),
            returnValue: <_i14.CapturedAccessibilityAnnouncement>[],
          )
          as List<_i14.CapturedAccessibilityAnnouncement>);

  @override
  _i13.Future<void> runTest(
    _i13.Future<void> Function()? testBody,
    _i9.VoidCallback? invariantTester, {
    String? description = '',
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #runTest,
              [testBody, invariantTester],
              {#description: description},
            ),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  void asyncBarrier() => super.noSuchMethod(
    Invocation.method(#asyncBarrier, []),
    returnValueForMissingStub: null,
  );

  @override
  void reportExceptionNoticed(_i6.FlutterErrorDetails? exception) =>
      super.noSuchMethod(
        Invocation.method(#reportExceptionNoticed, [exception]),
        returnValueForMissingStub: null,
      );

  @override
  void postTest() => super.noSuchMethod(
    Invocation.method(#postTest, []),
    returnValueForMissingStub: null,
  );

  @override
  void initServiceExtensions() => super.noSuchMethod(
    Invocation.method(#initServiceExtensions, []),
    returnValueForMissingStub: null,
  );

  @override
  _i13.Future<void> lockEvents(_i13.Future<void> Function()? callback) =>
      (super.noSuchMethod(
            Invocation.method(#lockEvents, [callback]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  void unlocked() => super.noSuchMethod(
    Invocation.method(#unlocked, []),
    returnValueForMissingStub: null,
  );

  @override
  _i13.Future<void> reassembleApplication() =>
      (super.noSuchMethod(
            Invocation.method(#reassembleApplication, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> performReassemble() =>
      (super.noSuchMethod(
            Invocation.method(#performReassemble, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  void registerSignalServiceExtension({
    required String? name,
    required _i6.AsyncCallback? callback,
  }) => super.noSuchMethod(
    Invocation.method(#registerSignalServiceExtension, [], {
      #name: name,
      #callback: callback,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void registerBoolServiceExtension({
    required String? name,
    required _i6.AsyncValueGetter<bool>? getter,
    required _i6.AsyncValueSetter<bool>? setter,
  }) => super.noSuchMethod(
    Invocation.method(#registerBoolServiceExtension, [], {
      #name: name,
      #getter: getter,
      #setter: setter,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void registerNumericServiceExtension({
    required String? name,
    required _i6.AsyncValueGetter<double>? getter,
    required _i6.AsyncValueSetter<double>? setter,
  }) => super.noSuchMethod(
    Invocation.method(#registerNumericServiceExtension, [], {
      #name: name,
      #getter: getter,
      #setter: setter,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void postEvent(String? eventKind, Map<String, dynamic>? eventData) =>
      super.noSuchMethod(
        Invocation.method(#postEvent, [eventKind, eventData]),
        returnValueForMissingStub: null,
      );

  @override
  void registerStringServiceExtension({
    required String? name,
    required _i6.AsyncValueGetter<String>? getter,
    required _i6.AsyncValueSetter<String>? setter,
  }) => super.noSuchMethod(
    Invocation.method(#registerStringServiceExtension, [], {
      #name: name,
      #getter: getter,
      #setter: setter,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void registerServiceExtension({
    required String? name,
    required _i6.ServiceExtensionCallback? callback,
  }) => super.noSuchMethod(
    Invocation.method(#registerServiceExtension, [], {
      #name: name,
      #callback: callback,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void addTimingsCallback(_i9.TimingsCallback? callback) => super.noSuchMethod(
    Invocation.method(#addTimingsCallback, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void removeTimingsCallback(_i9.TimingsCallback? callback) =>
      super.noSuchMethod(
        Invocation.method(#removeTimingsCallback, [callback]),
        returnValueForMissingStub: null,
      );

  @override
  void resetInternalState() => super.noSuchMethod(
    Invocation.method(#resetInternalState, []),
    returnValueForMissingStub: null,
  );

  @override
  void handleAppLifecycleStateChanged(_i9.AppLifecycleState? state) =>
      super.noSuchMethod(
        Invocation.method(#handleAppLifecycleStateChanged, [state]),
        returnValueForMissingStub: null,
      );

  @override
  _i13.Future<T> scheduleTask<T>(
    _i17.TaskCallback<T>? task,
    _i17.Priority? priority, {
    String? debugLabel,
    _i18.Flow? flow,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #scheduleTask,
              [task, priority],
              {#debugLabel: debugLabel, #flow: flow},
            ),
            returnValue:
                _i16.ifNotNull(
                  _i16.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #scheduleTask,
                      [task, priority],
                      {#debugLabel: debugLabel, #flow: flow},
                    ),
                  ),
                  (T v) => _i13.Future<T>.value(v),
                ) ??
                _FakeFuture_24<T>(
                  this,
                  Invocation.method(
                    #scheduleTask,
                    [task, priority],
                    {#debugLabel: debugLabel, #flow: flow},
                  ),
                ),
          )
          as _i13.Future<T>);

  @override
  bool handleEventLoopCallback() =>
      (super.noSuchMethod(
            Invocation.method(#handleEventLoopCallback, []),
            returnValue: false,
          )
          as bool);

  @override
  int scheduleFrameCallback(
    _i17.FrameCallback? callback, {
    bool? rescheduling = false,
    bool? scheduleNewFrame = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #scheduleFrameCallback,
              [callback],
              {
                #rescheduling: rescheduling,
                #scheduleNewFrame: scheduleNewFrame,
              },
            ),
            returnValue: 0,
          )
          as int);

  @override
  void cancelFrameCallbackWithId(int? id) => super.noSuchMethod(
    Invocation.method(#cancelFrameCallbackWithId, [id]),
    returnValueForMissingStub: null,
  );

  @override
  bool debugAssertNoTransientCallbacks(String? reason) =>
      (super.noSuchMethod(
            Invocation.method(#debugAssertNoTransientCallbacks, [reason]),
            returnValue: false,
          )
          as bool);

  @override
  bool debugAssertNoPendingPerformanceModeRequests(String? reason) =>
      (super.noSuchMethod(
            Invocation.method(#debugAssertNoPendingPerformanceModeRequests, [
              reason,
            ]),
            returnValue: false,
          )
          as bool);

  @override
  bool debugAssertNoTimeDilation(String? reason) =>
      (super.noSuchMethod(
            Invocation.method(#debugAssertNoTimeDilation, [reason]),
            returnValue: false,
          )
          as bool);

  @override
  void addPersistentFrameCallback(_i17.FrameCallback? callback) =>
      super.noSuchMethod(
        Invocation.method(#addPersistentFrameCallback, [callback]),
        returnValueForMissingStub: null,
      );

  @override
  void addPostFrameCallback(
    _i17.FrameCallback? callback, {
    String? debugLabel = 'callback',
  }) => super.noSuchMethod(
    Invocation.method(
      #addPostFrameCallback,
      [callback],
      {#debugLabel: debugLabel},
    ),
    returnValueForMissingStub: null,
  );

  @override
  void ensureFrameCallbacksRegistered() => super.noSuchMethod(
    Invocation.method(#ensureFrameCallbacksRegistered, []),
    returnValueForMissingStub: null,
  );

  @override
  void ensureVisualUpdate() => super.noSuchMethod(
    Invocation.method(#ensureVisualUpdate, []),
    returnValueForMissingStub: null,
  );

  @override
  void scheduleFrame() => super.noSuchMethod(
    Invocation.method(#scheduleFrame, []),
    returnValueForMissingStub: null,
  );

  @override
  void scheduleForcedFrame() => super.noSuchMethod(
    Invocation.method(#scheduleForcedFrame, []),
    returnValueForMissingStub: null,
  );

  @override
  void scheduleWarmUpFrame() => super.noSuchMethod(
    Invocation.method(#scheduleWarmUpFrame, []),
    returnValueForMissingStub: null,
  );

  @override
  void resetEpoch() => super.noSuchMethod(
    Invocation.method(#resetEpoch, []),
    returnValueForMissingStub: null,
  );

  @override
  void handleBeginFrame(Duration? rawTimeStamp) => super.noSuchMethod(
    Invocation.method(#handleBeginFrame, [rawTimeStamp]),
    returnValueForMissingStub: null,
  );

  @override
  _i17.PerformanceModeRequestHandle? requestPerformanceMode(
    _i9.DartPerformanceMode? mode,
  ) =>
      (super.noSuchMethod(Invocation.method(#requestPerformanceMode, [mode]))
          as _i17.PerformanceModeRequestHandle?);

  @override
  void handleDrawFrame() => super.noSuchMethod(
    Invocation.method(#handleDrawFrame, []),
    returnValueForMissingStub: null,
  );

  @override
  _i8.TestDefaultBinaryMessenger createBinaryMessenger() =>
      (super.noSuchMethod(
            Invocation.method(#createBinaryMessenger, []),
            returnValue: _FakeTestDefaultBinaryMessenger_9(
              this,
              Invocation.method(#createBinaryMessenger, []),
            ),
          )
          as _i8.TestDefaultBinaryMessenger);

  @override
  void handleMemoryPressure() => super.noSuchMethod(
    Invocation.method(#handleMemoryPressure, []),
    returnValueForMissingStub: null,
  );

  @override
  _i13.Future<void> handleSystemMessage(Object? systemMessage) =>
      (super.noSuchMethod(
            Invocation.method(#handleSystemMessage, [systemMessage]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  void evict(String? asset) => super.noSuchMethod(
    Invocation.method(#evict, [asset]),
    returnValueForMissingStub: null,
  );

  @override
  void readInitialLifecycleStateFromNativeWindow() => super.noSuchMethod(
    Invocation.method(#readInitialLifecycleStateFromNativeWindow, []),
    returnValueForMissingStub: null,
  );

  @override
  void handleViewFocusChanged(_i9.ViewFocusEvent? event) => super.noSuchMethod(
    Invocation.method(#handleViewFocusChanged, [event]),
    returnValueForMissingStub: null,
  );

  @override
  _i13.Future<_i9.AppExitResponse> handleRequestAppExit() =>
      (super.noSuchMethod(
            Invocation.method(#handleRequestAppExit, []),
            returnValue: _i13.Future<_i9.AppExitResponse>.value(
              _i9.AppExitResponse.exit,
            ),
          )
          as _i13.Future<_i9.AppExitResponse>);

  @override
  void setSystemUiChangeCallback(_i7.SystemUiChangeCallback? callback) =>
      super.noSuchMethod(
        Invocation.method(#setSystemUiChangeCallback, [callback]),
        returnValueForMissingStub: null,
      );

  @override
  _i13.Future<void> initializationComplete() =>
      (super.noSuchMethod(
            Invocation.method(#initializationComplete, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  void cancelPointer(int? pointer) => super.noSuchMethod(
    Invocation.method(#cancelPointer, [pointer]),
    returnValueForMissingStub: null,
  );

  @override
  void handlePointerEvent(_i10.PointerEvent? event) => super.noSuchMethod(
    Invocation.method(#handlePointerEvent, [event]),
    returnValueForMissingStub: null,
  );

  @override
  void hitTestInView(
    _i10.HitTestResult? result,
    _i9.Offset? position,
    int? viewId,
  ) => super.noSuchMethod(
    Invocation.method(#hitTestInView, [result, position, viewId]),
    returnValueForMissingStub: null,
  );

  @override
  void hitTest(_i10.HitTestResult? result, _i9.Offset? position) =>
      super.noSuchMethod(
        Invocation.method(#hitTest, [result, position]),
        returnValueForMissingStub: null,
      );

  @override
  void dispatchEvent(
    _i10.PointerEvent? event,
    _i10.HitTestResult? hitTestResult,
  ) => super.noSuchMethod(
    Invocation.method(#dispatchEvent, [event, hitTestResult]),
    returnValueForMissingStub: null,
  );

  @override
  void handleEvent(
    _i10.PointerEvent? event,
    _i10.HitTestEntry<_i10.HitTestTarget>? entry,
  ) => super.noSuchMethod(
    Invocation.method(#handleEvent, [event, entry]),
    returnValueForMissingStub: null,
  );

  @override
  void resetGestureBinding() => super.noSuchMethod(
    Invocation.method(#resetGestureBinding, []),
    returnValueForMissingStub: null,
  );

  @override
  void addSemanticsEnabledListener(_i9.VoidCallback? listener) =>
      super.noSuchMethod(
        Invocation.method(#addSemanticsEnabledListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void removeSemanticsEnabledListener(_i9.VoidCallback? listener) =>
      super.noSuchMethod(
        Invocation.method(#removeSemanticsEnabledListener, [listener]),
        returnValueForMissingStub: null,
      );

  @override
  void addSemanticsActionListener(
    _i6.ValueSetter<_i9.SemanticsActionEvent>? listener,
  ) => super.noSuchMethod(
    Invocation.method(#addSemanticsActionListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeSemanticsActionListener(
    _i6.ValueSetter<_i9.SemanticsActionEvent>? listener,
  ) => super.noSuchMethod(
    Invocation.method(#removeSemanticsActionListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  _i11.SemanticsHandle ensureSemantics() =>
      (super.noSuchMethod(
            Invocation.method(#ensureSemantics, []),
            returnValue: _FakeSemanticsHandle_25(
              this,
              Invocation.method(#ensureSemantics, []),
            ),
          )
          as _i11.SemanticsHandle);

  @override
  void performSemanticsAction(_i9.SemanticsActionEvent? action) =>
      super.noSuchMethod(
        Invocation.method(#performSemanticsAction, [action]),
        returnValueForMissingStub: null,
      );

  @override
  void handleAccessibilityFeaturesChanged() => super.noSuchMethod(
    Invocation.method(#handleAccessibilityFeaturesChanged, []),
    returnValueForMissingStub: null,
  );

  @override
  _i9.SemanticsUpdateBuilder createSemanticsUpdateBuilder() =>
      (super.noSuchMethod(
            Invocation.method(#createSemanticsUpdateBuilder, []),
            returnValue: _FakeSemanticsUpdateBuilder_26(
              this,
              Invocation.method(#createSemanticsUpdateBuilder, []),
            ),
          )
          as _i9.SemanticsUpdateBuilder);

  @override
  _i11.PipelineOwner createRootPipelineOwner() =>
      (super.noSuchMethod(
            Invocation.method(#createRootPipelineOwner, []),
            returnValue: _i16.dummyValue<_i11.PipelineOwner>(
              this,
              Invocation.method(#createRootPipelineOwner, []),
            ),
          )
          as _i11.PipelineOwner);

  @override
  void removeRenderView(_i11.RenderView? view) => super.noSuchMethod(
    Invocation.method(#removeRenderView, [view]),
    returnValueForMissingStub: null,
  );

  @override
  _i9.SceneBuilder createSceneBuilder() =>
      (super.noSuchMethod(
            Invocation.method(#createSceneBuilder, []),
            returnValue: _FakeSceneBuilder_27(
              this,
              Invocation.method(#createSceneBuilder, []),
            ),
          )
          as _i9.SceneBuilder);

  @override
  _i9.PictureRecorder createPictureRecorder() =>
      (super.noSuchMethod(
            Invocation.method(#createPictureRecorder, []),
            returnValue: _FakePictureRecorder_28(
              this,
              Invocation.method(#createPictureRecorder, []),
            ),
          )
          as _i9.PictureRecorder);

  @override
  _i9.Canvas createCanvas(_i9.PictureRecorder? recorder) =>
      (super.noSuchMethod(
            Invocation.method(#createCanvas, [recorder]),
            returnValue: _FakeCanvas_29(
              this,
              Invocation.method(#createCanvas, [recorder]),
            ),
          )
          as _i9.Canvas);

  @override
  void handleMetricsChanged() => super.noSuchMethod(
    Invocation.method(#handleMetricsChanged, []),
    returnValueForMissingStub: null,
  );

  @override
  void handleTextScaleFactorChanged() => super.noSuchMethod(
    Invocation.method(#handleTextScaleFactorChanged, []),
    returnValueForMissingStub: null,
  );

  @override
  void handlePlatformBrightnessChanged() => super.noSuchMethod(
    Invocation.method(#handlePlatformBrightnessChanged, []),
    returnValueForMissingStub: null,
  );

  @override
  void initMouseTracker([_i11.MouseTracker? tracker]) => super.noSuchMethod(
    Invocation.method(#initMouseTracker, [tracker]),
    returnValueForMissingStub: null,
  );

  @override
  void deferFirstFrame() => super.noSuchMethod(
    Invocation.method(#deferFirstFrame, []),
    returnValueForMissingStub: null,
  );

  @override
  void allowFirstFrame() => super.noSuchMethod(
    Invocation.method(#allowFirstFrame, []),
    returnValueForMissingStub: null,
  );

  @override
  void resetFirstFrameSent() => super.noSuchMethod(
    Invocation.method(#resetFirstFrameSent, []),
    returnValueForMissingStub: null,
  );

  @override
  void drawFrame() => super.noSuchMethod(
    Invocation.method(#drawFrame, []),
    returnValueForMissingStub: null,
  );

  @override
  _i11.ImageCache createImageCache() =>
      (super.noSuchMethod(
            Invocation.method(#createImageCache, []),
            returnValue: _FakeImageCache_18(
              this,
              Invocation.method(#createImageCache, []),
            ),
          )
          as _i11.ImageCache);

  @override
  _i13.Future<_i9.Codec> instantiateImageCodecFromBuffer(
    _i9.ImmutableBuffer? buffer, {
    int? cacheWidth,
    int? cacheHeight,
    bool? allowUpscaling = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #instantiateImageCodecFromBuffer,
              [buffer],
              {
                #cacheWidth: cacheWidth,
                #cacheHeight: cacheHeight,
                #allowUpscaling: allowUpscaling,
              },
            ),
            returnValue: _i13.Future<_i9.Codec>.value(
              _FakeCodec_30(
                this,
                Invocation.method(
                  #instantiateImageCodecFromBuffer,
                  [buffer],
                  {
                    #cacheWidth: cacheWidth,
                    #cacheHeight: cacheHeight,
                    #allowUpscaling: allowUpscaling,
                  },
                ),
              ),
            ),
          )
          as _i13.Future<_i9.Codec>);

  @override
  _i13.Future<_i9.Codec> instantiateImageCodecWithSize(
    _i9.ImmutableBuffer? buffer, {
    _i9.TargetImageSizeCallback? getTargetSize,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #instantiateImageCodecWithSize,
              [buffer],
              {#getTargetSize: getTargetSize},
            ),
            returnValue: _i13.Future<_i9.Codec>.value(
              _FakeCodec_30(
                this,
                Invocation.method(
                  #instantiateImageCodecWithSize,
                  [buffer],
                  {#getTargetSize: getTargetSize},
                ),
              ),
            ),
          )
          as _i13.Future<_i9.Codec>);

  @override
  void addObserver(_i12.WidgetsBindingObserver? observer) => super.noSuchMethod(
    Invocation.method(#addObserver, [observer]),
    returnValueForMissingStub: null,
  );

  @override
  bool removeObserver(_i12.WidgetsBindingObserver? observer) =>
      (super.noSuchMethod(
            Invocation.method(#removeObserver, [observer]),
            returnValue: false,
          )
          as bool);

  @override
  void handleLocaleChanged() => super.noSuchMethod(
    Invocation.method(#handleLocaleChanged, []),
    returnValueForMissingStub: null,
  );

  @override
  void dispatchLocalesChanged(List<_i9.Locale>? locales) => super.noSuchMethod(
    Invocation.method(#dispatchLocalesChanged, [locales]),
    returnValueForMissingStub: null,
  );

  @override
  void dispatchAccessibilityFeaturesChanged() => super.noSuchMethod(
    Invocation.method(#dispatchAccessibilityFeaturesChanged, []),
    returnValueForMissingStub: null,
  );

  @override
  _i13.Future<bool> handlePopRoute() =>
      (super.noSuchMethod(
            Invocation.method(#handlePopRoute, []),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> handlePushRoute(String? route) =>
      (super.noSuchMethod(
            Invocation.method(#handlePushRoute, [route]),
            returnValue: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i12.Widget wrapWithDefaultView(_i12.Widget? rootWidget) =>
      (super.noSuchMethod(
            Invocation.method(#wrapWithDefaultView, [rootWidget]),
            returnValue: _FakeWidget_31(
              this,
              Invocation.method(#wrapWithDefaultView, [rootWidget]),
            ),
          )
          as _i12.Widget);

  @override
  void scheduleAttachRootWidget(_i12.Widget? rootWidget) => super.noSuchMethod(
    Invocation.method(#scheduleAttachRootWidget, [rootWidget]),
    returnValueForMissingStub: null,
  );

  @override
  void attachRootWidget(_i12.Widget? rootWidget) => super.noSuchMethod(
    Invocation.method(#attachRootWidget, [rootWidget]),
    returnValueForMissingStub: null,
  );

  @override
  void attachToBuildOwner(_i12.RootWidget? widget) => super.noSuchMethod(
    Invocation.method(#attachToBuildOwner, [widget]),
    returnValueForMissingStub: null,
  );

  @override
  _i9.Locale? computePlatformResolvedLocale(
    List<_i9.Locale>? supportedLocales,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#computePlatformResolvedLocale, [
              supportedLocales,
            ]),
          )
          as _i9.Locale?);
}
